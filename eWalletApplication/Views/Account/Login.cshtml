@using eWalletApplication.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>
    <link href="../Vendor/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    @Styles.Render("~/Content/bootstrap.css")

    <style>
        body {
            margin: 0;
            font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: #212529;
            text-align: left;
            background-color: #fff;
        }

        :root {
            --input-padding-x: 1.5rem;
            --input-padding-y: .75rem;
        }


        body {
            background: #001a417;
            /* fallback for old browsers */
            background: -webkit-linear-gradient(to right, #254460,#54cada, #ddebc9);
            /* Chrome 10-25, Safari 5.1-6 */
            background: linear-gradient(to right, #254460,#54cada, #ddebc9);
            /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        }

        .card-signin {
            border: 0;
            border-radius: 1rem;
            box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);
        }

            .card-signin .card-title {
                margin-bottom: 2rem;
                font-weight: 300;
                font-size: 1.5rem;
            }

            .card-signin .card-body {
                padding: 2rem;
            }

        .form-signin {
            width: 100%;
        }

            .form-signin .btn {
                font-size: 80%;
                border-radius: 5rem;
                letter-spacing: .1rem;
                font-weight: bold;
                padding: 1rem;
                transition: all 0.2s;
            }

        .form-label-group {
            position: relative;
            margin-bottom: 1rem;
        }

            .form-label-group input {
                height: 50px;
                border-radius: 2rem;
            }

            .form-label-group > input,
            .form-label-group > label {
                padding: var(--input-padding-y) var(--input-padding-x);
            }

            .form-label-group > label {
                position: absolute;
                top: 0;
                left: 0;
                display: block;
                width: 100%;
                margin-bottom: 0;
                /* Override default `<label>` margin */
                line-height: 1.5;
                color: #495057;
                border: 1px solid transparent;
                border-radius: .25rem;
                transition: all .1s ease-in-out;
            }

            .form-label-group input::-webkit-input-placeholder {
                color: transparent;
            }

            .form-label-group input:-ms-input-placeholder {
                color: transparent;
            }

            .form-label-group input::-ms-input-placeholder {
                color: transparent;
            }

            .form-label-group input::-moz-placeholder {
                color: transparent;
            }

            .form-label-group input::-placeholder {
                color: transparent;
            }

            .form-label-group input:not(:placeholder-shown) {
                padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));
                padding-bottom: calc(var(--input-padding-y) / 3);
            }

                .form-label-group input:not(:placeholder-shown) ~ label {
                    padding-top: calc(var(--input-padding-y) / 3);
                    padding-bottom: calc(var(--input-padding-y) / 3);
                    font-size: 12px;
                    color: #777;
                }

        .btn-google {
            color: white;
            background-color: #fa6560;
        }

        .btn-facebook {
            color: white;
            background-color: #3b5998;
        }

        .btn-warning {
            background-color: #ff8422;
        }

            .btn-warning:hover, .btn-warning:active, .btn-warning:focus {
                background-color: #ffb25b !important;
            }
    </style>

</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
                <div class="card card-signin m-5">
                    <div class="card-body">
                        <h5 class="card-title text-center">Sign In</h5>
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-signin", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-label-group">

                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", id = "inputEmail", placeholder = "Email address", required = "required", autofocus = "autofocus" })
                                <label for="inputEmail">Email address</label>
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-label-group">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", type = "password", id = "inputPassword", placeholder = "Password", required = "required" })
                                <label for="inputPassword">Password</label>
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                            <div class="custom-control custom-checkbox mb-3">
                                @Html.CheckBoxFor(m => m.RememberMe, new { type = "checkbox", @class = "custom-control-input", id = "customCheck1" })
                                <label class="custom-control-label" for="customCheck1">Remember password</label>
                            </div>
                            <button class="btn btn-lg btn-warning btn-block text-uppercase text-light" type="submit">Sign in</button>
                            @Html.ActionLink("Register", "Register", null ,new { role = "button", @class = "btn btn-lg btn-warning btn-block text-uppercase text-light" })
                            <hr class="my-4">

                            @* Enable this once you have account confirmation enabled for password reset functionality
                                <p>
                                @Html.ActionLink("Forgot your password?", "ForgotPassword")
                                </p>*@
                        }
                        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

</body>
</html>
